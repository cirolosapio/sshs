name: Manual Release Workflow

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: linux
            arch: "amd64"
            rust-target: "x86_64-unknown-linux-gnu"
            runs-on: ubuntu-latest
          - os: linux
            arch: "amd64"
            rust-target: "x86_64-unknown-linux-musl"
            runs-on: ubuntu-latest
    runs-on: ${{ matrix.target.runs-on }}
    name: Build and save artifact
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal --target ${{ matrix.target.rust-target }} --no-self-update

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ matrix.target.os != 'windows' && matrix.target.os != 'darwin' }}

      - uses: Swatinem/rust-cache@v2

      - name: Build using cross
        run: cross build --release --target ${{ matrix.target.rust-target }}
        if: ${{ matrix.target.os != 'windows' && matrix.target.os != 'darwin' }}

      - name: Build using cargo
        run: cargo build --release --target ${{ matrix.target.rust-target }}
        if: matrix.target.os == 'windows' || matrix.target.os == 'darwin'

      - name: Set .exe extension for Windows
        id: set_extension
        run: echo "extension=.exe" >> $GITHUB_OUTPUT
        if: ${{ matrix.target.os == 'windows' }}

      - name: Set executable filename
        id: set_filename
        run: echo "filename=sshs-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ steps.set_extension.outputs.extension }}" >> $GITHUB_OUTPUT

      # - uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref }}
      #     asset_name: ${{ steps.set_filename.outputs.filename }}
      #     file: target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}

      - name: Compute checksums
        run: shasum --algorithm 256 "target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}" > "target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}.sha256"
        if: ${{ matrix.target.os != 'windows' }}

      - name: Compute checksums
        run: (Get-FileHash -Algorithm SHA256 -Path "target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}").Hash | Out-File -FilePath "target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}.sha256"
        if: ${{ matrix.target.os == 'windows' }}
        shell: pwsh

      # - uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref }}
      #     asset_name: ${{ steps.set_filename.outputs.filename }}.sha256
      #     file: target/${{ matrix.target.rust-target }}/release/sshs${{ steps.set_extension.outputs.extension }}.sha256

  package:
    strategy:
      fail-fast: false
      matrix:
        target:
          - arch: "amd64"
            rust-target: "x86_64-unknown-linux-gnu"
          - arch: "amd64"
            rust-target: "x86_64-unknown-linux-musl"
    needs: build
    runs-on: ubuntu-latest
    name: Package and upload artifact
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal --target ${{ matrix.target.rust-target }} --no-self-update

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - uses: Swatinem/rust-cache@v2

      - uses: robinraju/release-downloader@v1.11
        with:
          tag: ${{ github.ref_name }}
          fileName: sshs-linux-${{ matrix.target.arch }}
          out-file-path: target/${{ matrix.target.rust-target }}/release

      - name: Rename binary
        run: mv target/${{ matrix.target.rust-target }}/release/sshs-linux-${{ matrix.target.arch }} target/${{ matrix.target.rust-target }}/release/sshs

      - name: Create Debian package
        run: cargo deb --no-build --target ${{ matrix.target.rust-target }} --output "target/${{ matrix.target.rust-target }}/debian/sshs-${{ matrix.target.arch }}.deb"

      - name: Set deb filename
        id: set_filename
        run: echo "filename=sshs-linux-${{ matrix.target.arch }}.deb" >> $GITHUB_OUTPUT

      # - uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref }}
      #     asset_name: ${{ steps.set_filename.outputs.filename }}
      #     file: target/${{ matrix.target.rust-target }}/debian/sshs-${{ matrix.target.arch }}.deb

      - name: Compute checksums
        run: shasum --algorithm 256 "target/${{ matrix.target.rust-target }}/debian/sshs-${{ matrix.target.arch }}.deb" > "target/${{ matrix.target.rust-target }}/debian/sshs-${{ matrix.target.arch }}.deb.sha256"

      # - uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref }}
      #     asset_name: ${{ steps.set_filename.outputs.filename }}.sha256
      #     file: target/${{ matrix.target.rust-target }}/debian/sshs-${{ matrix.target.arch }}.deb.sha256
